# vim scroll controls
set-window-option -g mode-keys vi

bind-key -r -T prefix       K               resize-pane -U 5
bind-key -r -T prefix       J               resize-pane -D 5
bind-key -r -T prefix       H               resize-pane -L 5
bind-key -r -T prefix       L               resize-pane -R 5

# remap prefix from 'C-b' to 'C-space'
# C-; is mapped to C-space in the iterm profile
# so the leader key is either C-; or C-space
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# split panes using | and -
bind '-' split-window -v -c "#{pane_current_path}"
bind 'h' split-window -v -c "#{pane_current_path}"
bind '|' split-window -h -c "#{pane_current_path}"
bind 'b' split-window -h -c "#{pane_current_path}"

unbind '"'
unbind %

###
# change pane movement to mirror num pad keys
# without needing to switch to number layer
###

# change default detach command to q for quit
unbind d
bind q detach-client

# exit, k for kill
unbind x
bind k kill-pane
#bind-key -T prefix k kill-window

#create
unbind c
# open new panes in the same directory as the
# current pane, n for new
bind n new-window -c "#{pane_current_path}"

bind x select-window -t :=1
bind c select-window -t :=2
bind v select-window -t :=3
bind s select-window -t :=4
bind d select-window -t :=5
bind f select-window -t :=6
bind w select-window -t :=7
bind e select-window -t :=8
bind r select-window -t :=9

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# make ctrl+option work like the leader key
bind-key -n 'M-C-j' previous-window
bind-key -n 'M-C-k' next-window

bind-key -n 'M-C-n' new-window -c "#{pane_current_path}"

bind-key -n 'M-C-x' select-window -t :=1
bind-key -n 'M-C-c' select-window -t :=2
bind-key -n 'M-C-v' select-window -t :=3
bind-key -n 'M-C-s' select-window -t :=4
bind-key -n 'M-C-d' select-window -t :=5
bind-key -n 'M-C-f' select-window -t :=6
bind-key -n 'M-C-w' select-window -t :=7
bind-key -n 'M-C-e' select-window -t :=8
bind-key -n 'M-C-r' select-window -t :=7

bind-key -n 'M-C-q' detach-client
bind-key -n 'M-C-q' detach-client

bind-key -n 'M-C-h' split-window -v -c "#{pane_current_path}"
bind-key -n 'M-C-b' split-window -h -c "#{pane_current_path}"

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
set -g automatic-rename-format '#{s|.*/||:pane_current_path}'

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow


######################
### DESIGN CHANGES ###
######################

## Status bar design
# status line
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"

# The modes {
setw -g clock-mode-colour colour135
# }

# The statusbar {
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
# }

# pane border {
set -g pane-active-border-style bg=default,fg=colour250
set -g pane-border-style fg=colour244
set -g pane-border-status bottom
set -g pane-border-format ' #[fg=colour250]#{pane_current_path}'
# }
