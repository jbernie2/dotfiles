source ~/.vimrc

call plug#begin('~/.vim/plugged')
" Plugins go here

" git plugin
Plug 'tpope/vim-fugitive'

" easily delete, change and add surroundings in pairs
" change
"   'hello world' to [hello world]: cs']
"   'hello world' to hello world: ds'
"   hello world to (hello) world: ysiw)
"   hello world to (hello world): yss)
Plug 'tpope/vim-surround'

" change case of a selection
" convert to
"   snake_case: crs
"   MixedCase:  crm
"   camelCase:  crc
"   UPPER_CASE: cru
"   dash-case:  cr-
"   dot.case:   cr.
"   space case: cr<space>
"   Title Case: crt
Plug 'https://github.com/tpope/vim-abolish'

" make dot-repeat work with other tpope plugins
Plug 'https://github.com/tpope/vim-repeat'

" file tree
Plug 'scrooloose/nerdtree'

" fuzzy finder
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'

Plug 'altercation/vim-colors-solarized'

" auto-commenter
Plug 'scrooloose/nerdcommenter'


" RipGrep (Rg) search tool
Plug 'jremmen/vim-ripgrep'

" Seemless vim/tmux navigation
Plug 'christoomey/vim-tmux-navigator'

" Writable search aka global find and replace
Plug 'AndrewRadev/writable_search.vim'

"javascript Plugins
" js synxtax highlighting
Plug 'jelera/vim-javascript-syntax'

"elm Plugins
" elm syntax highlighting and utils
Plug 'elmcast/elm-vim'

" nix syntax highlighting
Plug 'LnL7/vim-nix'

" idris syntax highlighting
Plug 'idris-hackers/idris-vim'

" kotlin syntax highlighting
Plug 'udalov/kotlin-vim'

" language server protocol (lsp) client
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'

" All of your Plugins must be added before the following line
call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""
"""""  Language Server Protocol Configuration """""
"""""""""""""""""""""""""""""""""""""""""""""""""""

" for installing language servers: see documentation
" here: https://github.com/mattn/vim-lsp-settings

" tldr: run
" :LspInstallServer
" which will install a language server to a global location
" based on the file type that is open when the command is run

let g:lsp_auto_enable = 1

" don't show in line errors
let g:lsp_diagnostics_enabled = 0

function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    "setlocal signcolumn=yes
    if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
    nmap <buffer> gd <plug>(lsp-definition)
    nmap <buffer> gs <plug>(lsp-document-symbol-search)
    nmap <buffer> gS <plug>(lsp-workspace-symbol-search)
    nmap <buffer> gr <plug>(lsp-references)
    nmap <buffer> gi <plug>(lsp-implementation)
    nmap <buffer> gD <plug>(lsp-type-definition)
    nmap <buffer> <leader>rn <plug>(lsp-rename)
    nmap <buffer> [g <plug>(lsp-previous-diagnostic)
    nmap <buffer> ]g <plug>(lsp-next-diagnostic)
    nmap <buffer> K <plug>(lsp-hover)
    nnoremap <buffer> <expr><c-f> lsp#scroll(+4)
    nnoremap <buffer> <expr><c-d> lsp#scroll(-4)

    let g:lsp_format_sync_timeout = 1000
    autocmd! BufWritePre *.rs,*.go call execute('LspDocumentFormatSync')

    " refer to doc to add more commands
endfunction

augroup lsp_install
    au!
    " call s:on_lsp_buffer_enabled only for languages that has the server registered.
    autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END

"""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""

